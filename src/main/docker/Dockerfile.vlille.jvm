####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/getting-started-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/getting-started-jvm
#
###


# syntax=docker/dockerfile:1

FROM maven as cache-m2
ENV WD=/usr/app
WORKDIR $WD
COPY pom.xml $WD
RUN mvn verify -DskipTests

FROM jcsim/maven-build:latest as build
ENV WD=/usr/app
WORKDIR $WD
COPY --from=cache-m2 /root/.m2 /root/.m2
COPY . $WD
RUN mvn package -DskipTests -o

FROM jcsim/maven-build:latest as run-dev-stack
ENV WD=/usr/app
WORKDIR $WD
COPY --from=build /usr/app/ .
#ENTRYPOINT ["mvn", "compile", "quarkus:dev"]
ENTRYPOINT java -jar /usr/app/target/quarkus-app/quarkus-run.jar
#ENTRYPOINT [ "tail","-f","/dev/null" ]


FROM eclipse-temurin:17-alpine as run-prod 
ENV WD=/usr/app
WORKDIR $WD
COPY --from=build /usr/app/target/quarkus-app ./target/quarkus-app
#ENTRYPOINT ["mvn", "compile", "quarkus:dev"]
ENTRYPOINT java -jar /usr/app/target/quarkus-app/quarkus-run.jar
#ENTRYPOINT [ "tail","-f","/dev/null" ]


FROM alpine:latest as custome-jre
WORKDIR /deployment

# copy the custom JRE produced from jlink
COPY ./jre/ ./jre/

# copy the app
COPY target/getting-started-1.0-SNAPSHOT-runner.jar target/getting-started-1.0-SNAPSHOT-runner.jar

# run the app on startup
ENTRYPOINT jre/bin/java -jar --enable-preview  target/getting-started-1.0-SNAPSHOT-runner.jar

FROM jcsim/maven-build:latest as run-test 
ENV WD=/usr/app
WORKDIR $WD
COPY --from=build /usr/app/ .
COPY --from=build /root/.m2 /root/.m2
ENTRYPOINT ["mvn", "test"]
# ENTRYPOINT java -jar /usr/app/target/quarkus-app/quarkus-run.jar
#ENTRYPOINT [ "tail","-f","/dev/null" ]
